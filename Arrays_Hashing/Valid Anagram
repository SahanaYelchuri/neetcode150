bool isAnagram(string s, string t) {
        if (s.length()!= t.length()) return false;

        unordered_map<char, int> countS;
        unordered_map<char, int> countT;

        for(int i=0;i<s.length();i++){
            countS[s[i]]++;
            countT[t[i]]++;
        }

        return countS == countT;
  }  

Time complexity: O(n+m)
Space complexity: O(1) since we have at most 26 different characters.

